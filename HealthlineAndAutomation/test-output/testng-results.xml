<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="1" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[<b>Starting browser : chrome</b> <br />]]>
    </line>
    <line>
      <![CDATA[<b>Starting browser : chrome</b> <br />]]>
    </line>
  </reporter-output>
  <suite started-at="2021-04-05T17:27:26 IST" name="Automation Practice Suite" finished-at="2021-04-05T17:27:56 IST" duration-ms="30543">
    <groups>
    </groups>
    <test started-at="2021-04-05T17:27:26 IST" name="Subscribe" finished-at="2021-04-05T17:27:56 IST" duration-ms="30543">
      <class name="com.healthline.testscripts.Subscribe">
        <test-method is-config="true" signature="beforeMethod(java.lang.String, java.lang.String)[pri:0, instance:com.healthline.testscripts.Subscribe@36902638]" started-at="2021-04-05T17:27:26 IST" name="beforeMethod" finished-at="2021-04-05T17:27:33 IST" duration-ms="7018" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[https://www.healthline.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<b>Starting browser : chrome</b> <br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="subscribeFunctionalityWithValidEmail(java.lang.String)[pri:1, instance:com.healthline.testscripts.Subscribe@36902638]" started-at="2021-04-05T17:27:33 IST" name="subscribeFunctionalityWithValidEmail" description="To verify subscribe functionality." data-provider="validEmail" finished-at="2021-04-05T17:27:38 IST" duration-ms="5456" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[test@gmail.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subscribeFunctionalityWithValidEmail -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.healthline.testscripts.Subscribe@36902638]" started-at="2021-04-05T17:27:38 IST" name="afterMethod" finished-at="2021-04-05T17:27:39 IST" duration-ms="677" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String, java.lang.String)[pri:0, instance:com.healthline.testscripts.Subscribe@36902638]" started-at="2021-04-05T17:27:39 IST" name="beforeMethod" finished-at="2021-04-05T17:27:45 IST" duration-ms="5621" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[https://www.healthline.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<b>Starting browser : chrome</b> <br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="subscribeFunctionalityWithInvalidEmail(java.lang.String)[pri:2, instance:com.healthline.testscripts.Subscribe@36902638]" started-at="2021-04-05T17:27:45 IST" name="subscribeFunctionalityWithInvalidEmail" description="To verify subscribe functionality." data-provider="invalidEmail" finished-at="2021-04-05T17:27:56 IST" duration-ms="11014" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[test.com]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//h2[text()='Thanks for subscribing']"}
  (Session info: chrome=89.0.4389.114)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DSK-323', ip: '10.0.1.64', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 89.0.4389.114, chrome: {chromedriverVersion: 88.0.4324.96 (68dba2d8a0b14..., userDataDir: C:\Users\VANSHI~1.JOU\AppDa...}, goog:chromeOptions: {debuggerAddress: localhost:64921}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 4f1866df21e38676760feaff0c1da939
*** Element info: {Using=xpath, value=//h2[text()='Thanks for subscribing']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//h2[text()='Thanks for subscribing']"}
  (Session info: chrome=89.0.4389.114)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DSK-323', ip: '10.0.1.64', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 89.0.4389.114, chrome: {chromedriverVersion: 88.0.4324.96 (68dba2d8a0b14..., userDataDir: C:\Users\VANSHI~1.JOU\AppDa...}, goog:chromeOptions: {debuggerAddress: localhost:64921}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 4f1866df21e38676760feaff0c1da939
*** Element info: {Using=xpath, value=//h2[text()='Thanks for subscribing']}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at com.healthline.testscripts.Subscribe.subscribeFunctionalityWithInvalidEmail(Subscribe.java:51)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subscribeFunctionalityWithInvalidEmail -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.healthline.testscripts.Subscribe@36902638]" started-at="2021-04-05T17:27:56 IST" name="afterMethod" finished-at="2021-04-05T17:27:56 IST" duration-ms="683" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.healthline.testscripts.Subscribe -->
    </test> <!-- Subscribe -->
  </suite> <!-- Automation Practice Suite -->
</testng-results>
